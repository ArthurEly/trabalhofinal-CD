$comment
	File created using the following command:
		vcd file trabalhofinalcd.msim.vcd -direction
$end
$date
	Fri Apr 14 15:10:18 2023
$end
$version
	ModelSim Version 10.1d
$end
$timescale
	1ps
$end
$scope module controlevisor_vlg_vec_tst $end
$var reg 8 ! address_down [7:0] $end
$var reg 8 " address_up [7:0] $end
$var reg 1 # B_done $end
$var reg 1 $ B_mostra_E $end
$var reg 2 % count [1:0] $end
$var reg 8 & data_user [7:0] $end
$var reg 1 ' down_on $end
$var reg 1 ( msg_done $end
$var reg 8 ) read_reg [7:0] $end
$var reg 1 * S_mostraE $end
$var reg 1 + up_on $end
$var wire 1 , a1teste $end
$var wire 1 - ad0 $end
$var wire 1 . ad1 $end
$var wire 1 / address_up_teste $end
$var wire 1 0 adress_down_teste $end
$var wire 1 1 decod0 [6] $end
$var wire 1 2 decod0 [5] $end
$var wire 1 3 decod0 [4] $end
$var wire 1 4 decod0 [3] $end
$var wire 1 5 decod0 [2] $end
$var wire 1 6 decod0 [1] $end
$var wire 1 7 decod0 [0] $end
$var wire 1 8 decod1 [6] $end
$var wire 1 9 decod1 [5] $end
$var wire 1 : decod1 [4] $end
$var wire 1 ; decod1 [3] $end
$var wire 1 < decod1 [2] $end
$var wire 1 = decod1 [1] $end
$var wire 1 > decod1 [0] $end
$var wire 1 ? g1teste $end
$var wire 1 @ led00 $end
$var wire 1 A led01 $end
$var wire 1 B led10 $end
$var wire 1 C led11 $end
$var wire 1 D problema [7] $end
$var wire 1 E problema [6] $end
$var wire 1 F problema [5] $end
$var wire 1 G problema [4] $end
$var wire 1 H problema [3] $end
$var wire 1 I problema [2] $end
$var wire 1 J problema [1] $end
$var wire 1 K problema [0] $end
$var wire 1 L read_reg_teste $end
$var wire 1 M VISOR0_REG [6] $end
$var wire 1 N VISOR0_REG [5] $end
$var wire 1 O VISOR0_REG [4] $end
$var wire 1 P VISOR0_REG [3] $end
$var wire 1 Q VISOR0_REG [2] $end
$var wire 1 R VISOR0_REG [1] $end
$var wire 1 S VISOR0_REG [0] $end
$var wire 1 T VISOR1_REG [6] $end
$var wire 1 U VISOR1_REG [5] $end
$var wire 1 V VISOR1_REG [4] $end
$var wire 1 W VISOR1_REG [3] $end
$var wire 1 X VISOR1_REG [2] $end
$var wire 1 Y VISOR1_REG [1] $end
$var wire 1 Z VISOR1_REG [0] $end
$var wire 1 [ VISOR2_REG [6] $end
$var wire 1 \ VISOR2_REG [5] $end
$var wire 1 ] VISOR2_REG [4] $end
$var wire 1 ^ VISOR2_REG [3] $end
$var wire 1 _ VISOR2_REG [2] $end
$var wire 1 ` VISOR2_REG [1] $end
$var wire 1 a VISOR2_REG [0] $end
$var wire 1 b VISOR3_REG [6] $end
$var wire 1 c VISOR3_REG [5] $end
$var wire 1 d VISOR3_REG [4] $end
$var wire 1 e VISOR3_REG [3] $end
$var wire 1 f VISOR3_REG [2] $end
$var wire 1 g VISOR3_REG [1] $end
$var wire 1 h VISOR3_REG [0] $end
$var wire 1 i sampler $end
$scope module i1 $end
$var wire 1 j gnd $end
$var wire 1 k vcc $end
$var wire 1 l unknown $end
$var tri1 1 m devclrn $end
$var tri1 1 n devpor $end
$var tri1 1 o devoe $end
$var wire 1 p a1teste~output_o $end
$var wire 1 q VISOR3_REG[6]~output_o $end
$var wire 1 r VISOR3_REG[5]~output_o $end
$var wire 1 s VISOR3_REG[4]~output_o $end
$var wire 1 t VISOR3_REG[3]~output_o $end
$var wire 1 u VISOR3_REG[2]~output_o $end
$var wire 1 v VISOR3_REG[1]~output_o $end
$var wire 1 w VISOR3_REG[0]~output_o $end
$var wire 1 x g1teste~output_o $end
$var wire 1 y led00~output_o $end
$var wire 1 z led01~output_o $end
$var wire 1 { led10~output_o $end
$var wire 1 | led11~output_o $end
$var wire 1 } ad0~output_o $end
$var wire 1 ~ ad1~output_o $end
$var wire 1 !! adress_down_teste~output_o $end
$var wire 1 "! read_reg_teste~output_o $end
$var wire 1 #! address_up_teste~output_o $end
$var wire 1 $! decod0[6]~output_o $end
$var wire 1 %! decod0[5]~output_o $end
$var wire 1 &! decod0[4]~output_o $end
$var wire 1 '! decod0[3]~output_o $end
$var wire 1 (! decod0[2]~output_o $end
$var wire 1 )! decod0[1]~output_o $end
$var wire 1 *! decod0[0]~output_o $end
$var wire 1 +! decod1[6]~output_o $end
$var wire 1 ,! decod1[5]~output_o $end
$var wire 1 -! decod1[4]~output_o $end
$var wire 1 .! decod1[3]~output_o $end
$var wire 1 /! decod1[2]~output_o $end
$var wire 1 0! decod1[1]~output_o $end
$var wire 1 1! decod1[0]~output_o $end
$var wire 1 2! problema[7]~output_o $end
$var wire 1 3! problema[6]~output_o $end
$var wire 1 4! problema[5]~output_o $end
$var wire 1 5! problema[4]~output_o $end
$var wire 1 6! problema[3]~output_o $end
$var wire 1 7! problema[2]~output_o $end
$var wire 1 8! problema[1]~output_o $end
$var wire 1 9! problema[0]~output_o $end
$var wire 1 :! VISOR0_REG[6]~output_o $end
$var wire 1 ;! VISOR0_REG[5]~output_o $end
$var wire 1 <! VISOR0_REG[4]~output_o $end
$var wire 1 =! VISOR0_REG[3]~output_o $end
$var wire 1 >! VISOR0_REG[2]~output_o $end
$var wire 1 ?! VISOR0_REG[1]~output_o $end
$var wire 1 @! VISOR0_REG[0]~output_o $end
$var wire 1 A! VISOR1_REG[6]~output_o $end
$var wire 1 B! VISOR1_REG[5]~output_o $end
$var wire 1 C! VISOR1_REG[4]~output_o $end
$var wire 1 D! VISOR1_REG[3]~output_o $end
$var wire 1 E! VISOR1_REG[2]~output_o $end
$var wire 1 F! VISOR1_REG[1]~output_o $end
$var wire 1 G! VISOR1_REG[0]~output_o $end
$var wire 1 H! VISOR2_REG[6]~output_o $end
$var wire 1 I! VISOR2_REG[5]~output_o $end
$var wire 1 J! VISOR2_REG[4]~output_o $end
$var wire 1 K! VISOR2_REG[3]~output_o $end
$var wire 1 L! VISOR2_REG[2]~output_o $end
$var wire 1 M! VISOR2_REG[1]~output_o $end
$var wire 1 N! VISOR2_REG[0]~output_o $end
$var wire 1 O! count[1]~input_o $end
$var wire 1 P! count[0]~input_o $end
$var wire 1 Q! msg_done~input_o $end
$var wire 1 R! inst9|inst17~combout $end
$var wire 1 S! up_on~input_o $end
$var wire 1 T! S_mostraE~input_o $end
$var wire 1 U! down_on~input_o $end
$var wire 1 V! inst123|inst25~0_combout $end
$var wire 1 W! inst123|inst25~1_combout $end
$var wire 1 X! inst1|inst0~combout $end
$var wire 1 Y! inst1|inst1~0_combout $end
$var wire 1 Z! inst123|inst17~0_combout $end
$var wire 1 [! inst123|inst17~1_combout $end
$var wire 1 \! inst1|inst1~1_combout $end
$var wire 1 ]! inst1|inst1~2_combout $end
$var wire 1 ^! inst57~0_combout $end
$var wire 1 _! B_done~input_o $end
$var wire 1 `! inst50|inst~combout $end
$var wire 1 a! B_mostra_E~input_o $end
$var wire 1 b! inst13~combout $end
$var wire 1 c! inst50|inst2~combout $end
$var wire 1 d! inst55~combout $end
$var wire 1 e! inst57~combout $end
$var wire 1 f! address_down[2]~input_o $end
$var wire 1 g! data_user[2]~input_o $end
$var wire 1 h! inst49|inst2|9~0_combout $end
$var wire 1 i! address_up[2]~input_o $end
$var wire 1 j! read_reg[2]~input_o $end
$var wire 1 k! inst49|inst2|9~1_combout $end
$var wire 1 l! data_user[0]~input_o $end
$var wire 1 m! address_up[0]~input_o $end
$var wire 1 n! inst49|inst4|9~0_combout $end
$var wire 1 o! read_reg[0]~input_o $end
$var wire 1 p! address_down[0]~input_o $end
$var wire 1 q! inst49|inst4|9~1_combout $end
$var wire 1 r! data_user[1]~input_o $end
$var wire 1 s! address_up[1]~input_o $end
$var wire 1 t! inst49|inst3|9~0_combout $end
$var wire 1 u! read_reg[1]~input_o $end
$var wire 1 v! address_down[1]~input_o $end
$var wire 1 w! inst49|inst3|9~1_combout $end
$var wire 1 x! read_reg[3]~input_o $end
$var wire 1 y! address_down[3]~input_o $end
$var wire 1 z! data_user[3]~input_o $end
$var wire 1 {! inst49|inst|9~0_combout $end
$var wire 1 |! address_up[3]~input_o $end
$var wire 1 }! inst49|inst|9~1_combout $end
$var wire 1 ~! inst6|inst7|inst~0_combout $end
$var wire 1 !" inst6|inst6|inst~0_combout $end
$var wire 1 "" inst6|inst5|inst7~0_combout $end
$var wire 1 #" inst6|inst4|inst~0_combout $end
$var wire 1 $" inst6|inst3|inst~0_combout $end
$var wire 1 %" inst4|LPM_MUX_component|auto_generated|result_node[1]~10_combout $end
$var wire 1 &" inst6|inst|inst~0_combout $end
$var wire 1 '" read_reg[7]~input_o $end
$var wire 1 (" address_up[7]~input_o $end
$var wire 1 )" address_down[7]~input_o $end
$var wire 1 *" data_user[7]~input_o $end
$var wire 1 +" inst49|inst6|9~0_combout $end
$var wire 1 ," inst49|inst6|9~1_combout $end
$var wire 1 -" address_up[6]~input_o $end
$var wire 1 ." read_reg[6]~input_o $end
$var wire 1 /" data_user[6]~input_o $end
$var wire 1 0" address_down[6]~input_o $end
$var wire 1 1" inst49|inst5|9~0_combout $end
$var wire 1 2" inst49|inst5|9~1_combout $end
$var wire 1 3" read_reg[5]~input_o $end
$var wire 1 4" data_user[5]~input_o $end
$var wire 1 5" address_up[5]~input_o $end
$var wire 1 6" inst49|inst7|9~0_combout $end
$var wire 1 7" address_down[5]~input_o $end
$var wire 1 8" inst49|inst7|9~1_combout $end
$var wire 1 9" data_user[4]~input_o $end
$var wire 1 :" address_up[4]~input_o $end
$var wire 1 ;" inst49|inst8|9~0_combout $end
$var wire 1 <" read_reg[4]~input_o $end
$var wire 1 =" address_down[4]~input_o $end
$var wire 1 >" inst49|inst8|9~1_combout $end
$var wire 1 ?" inst18|inst7|inst~0_combout $end
$var wire 1 @" inst18|inst6|inst~0_combout $end
$var wire 1 A" inst18|inst5|inst7~0_combout $end
$var wire 1 B" inst18|inst4|inst~0_combout $end
$var wire 1 C" inst18|inst3|inst~0_combout $end
$var wire 1 D" inst2|LPM_MUX_component|auto_generated|result_node[1]~6_combout $end
$var wire 1 E" inst18|inst|inst~0_combout $end
$var wire 1 F" inst4|LPM_MUX_component|auto_generated|result_node[6]~12_combout $end
$var wire 1 G" inst4|LPM_MUX_component|auto_generated|result_node[5]~13_combout $end
$var wire 1 H" inst4|LPM_MUX_component|auto_generated|result_node[4]~14_combout $end
$var wire 1 I" inst4|LPM_MUX_component|auto_generated|result_node[3]~15_combout $end
$var wire 1 J" inst4|LPM_MUX_component|auto_generated|result_node[1]~11_combout $end
$var wire 1 K" inst4|LPM_MUX_component|auto_generated|result_node[0]~16_combout $end
$var wire 1 L" inst2|LPM_MUX_component|auto_generated|result_node[6]~8_combout $end
$var wire 1 M" inst2|LPM_MUX_component|auto_generated|result_node[4]~9_combout $end
$var wire 1 N" inst2|LPM_MUX_component|auto_generated|result_node[2]~10_combout $end
$var wire 1 O" inst2|LPM_MUX_component|auto_generated|result_node[1]~7_combout $end
$var wire 1 P" inst41~combout $end
$var wire 1 Q" inst45~2_combout $end
$var wire 1 R" inst45~3_combout $end
$var wire 1 S" inst3|inst26~0_combout $end
$var wire 1 T" inst3|inst25~combout $end
$var wire 1 U" inst3|inst17~2_combout $end
$var wire 1 V" inst2|LPM_MUX_component|auto_generated|result_node [6] $end
$var wire 1 W" inst2|LPM_MUX_component|auto_generated|result_node [5] $end
$var wire 1 X" inst2|LPM_MUX_component|auto_generated|result_node [4] $end
$var wire 1 Y" inst2|LPM_MUX_component|auto_generated|result_node [3] $end
$var wire 1 Z" inst2|LPM_MUX_component|auto_generated|result_node [2] $end
$var wire 1 [" inst2|LPM_MUX_component|auto_generated|result_node [1] $end
$var wire 1 \" inst2|LPM_MUX_component|auto_generated|result_node [0] $end
$var wire 1 ]" inst4|LPM_MUX_component|auto_generated|result_node [6] $end
$var wire 1 ^" inst4|LPM_MUX_component|auto_generated|result_node [5] $end
$var wire 1 _" inst4|LPM_MUX_component|auto_generated|result_node [4] $end
$var wire 1 `" inst4|LPM_MUX_component|auto_generated|result_node [3] $end
$var wire 1 a" inst4|LPM_MUX_component|auto_generated|result_node [2] $end
$var wire 1 b" inst4|LPM_MUX_component|auto_generated|result_node [1] $end
$var wire 1 c" inst4|LPM_MUX_component|auto_generated|result_node [0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b0 "
0#
0$
b1 %
b1111 &
1'
0(
b0 )
0*
0+
1,
0-
1.
0/
10
07
06
05
04
03
02
11
0>
0=
0<
0;
0:
09
18
1?
0@
1A
0B
0C
0K
0J
0I
0H
0G
0F
0E
0D
0L
0S
0R
0Q
0P
0O
0N
1M
0Z
0Y
0X
0W
0V
0U
1T
0a
1`
1_
0^
0]
0\
0[
1h
1g
1f
1e
0d
0c
1b
xi
0j
1k
xl
1m
1n
1o
1p
1q
0r
0s
1t
1u
1v
1w
1x
0y
1z
0{
0|
0}
1~
1!!
0"!
0#!
1$!
0%!
0&!
0'!
0(!
0)!
0*!
1+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
1:!
0;!
0<!
0=!
0>!
0?!
0@!
1A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
0J!
0K!
1L!
1M!
0N!
0O!
1P!
0Q!
0R!
0S!
0T!
1U!
0V!
1W!
1X!
0Y!
0Z!
0[!
1\!
0]!
0^!
0_!
0`!
0a!
1b!
1c!
1d!
0e!
0f!
1g!
0h!
0i!
0j!
0k!
1l!
0m!
0n!
0o!
0p!
1q!
1r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
1z!
0{!
0|!
0}!
1~!
0!"
1""
1#"
1$"
1%"
1&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
1>"
1?"
0@"
1A"
1B"
0C"
1D"
1E"
1F"
0G"
1H"
1I"
0J"
1K"
1L"
1M"
0N"
0O"
0P"
1Q"
1R"
1S"
1T"
0U"
0\"
z["
zZ"
0Y"
zX"
0W"
zV"
zc"
zb"
0a"
z`"
z_"
z^"
z]"
$end
#1000000
