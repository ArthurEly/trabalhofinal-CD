$comment
	File created using the following command:
		vcd file trabalhofinalcd.msim.vcd -direction
$end
$date
	Fri Apr 14 14:45:04 2023
$end
$version
	ModelSim Version 10.1d
$end
$timescale
	1ps
$end
$scope module controlevisor_vlg_vec_tst $end
$var reg 8 ! address_down [7:0] $end
$var reg 8 " address_up [7:0] $end
$var reg 1 # B_done $end
$var reg 1 $ B_mostra_E $end
$var reg 2 % count [1:0] $end
$var reg 8 & data_user [7:0] $end
$var reg 1 ' down_on $end
$var reg 1 ( msg_done $end
$var reg 8 ) read_reg [7:0] $end
$var reg 1 * S_mostraE $end
$var reg 1 + up_on $end
$var wire 1 , a1teste $end
$var wire 1 - ad0 $end
$var wire 1 . ad1 $end
$var wire 1 / decod0 [6] $end
$var wire 1 0 decod0 [5] $end
$var wire 1 1 decod0 [4] $end
$var wire 1 2 decod0 [3] $end
$var wire 1 3 decod0 [2] $end
$var wire 1 4 decod0 [1] $end
$var wire 1 5 decod0 [0] $end
$var wire 1 6 decod1 [6] $end
$var wire 1 7 decod1 [5] $end
$var wire 1 8 decod1 [4] $end
$var wire 1 9 decod1 [3] $end
$var wire 1 : decod1 [2] $end
$var wire 1 ; decod1 [1] $end
$var wire 1 < decod1 [0] $end
$var wire 1 = g1teste $end
$var wire 1 > led00 $end
$var wire 1 ? led01 $end
$var wire 1 @ led10 $end
$var wire 1 A led11 $end
$var wire 1 B problema [7] $end
$var wire 1 C problema [6] $end
$var wire 1 D problema [5] $end
$var wire 1 E problema [4] $end
$var wire 1 F problema [3] $end
$var wire 1 G problema [2] $end
$var wire 1 H problema [1] $end
$var wire 1 I problema [0] $end
$var wire 1 J VISOR0_REG [6] $end
$var wire 1 K VISOR0_REG [5] $end
$var wire 1 L VISOR0_REG [4] $end
$var wire 1 M VISOR0_REG [3] $end
$var wire 1 N VISOR0_REG [2] $end
$var wire 1 O VISOR0_REG [1] $end
$var wire 1 P VISOR0_REG [0] $end
$var wire 1 Q VISOR1_REG [6] $end
$var wire 1 R VISOR1_REG [5] $end
$var wire 1 S VISOR1_REG [4] $end
$var wire 1 T VISOR1_REG [3] $end
$var wire 1 U VISOR1_REG [2] $end
$var wire 1 V VISOR1_REG [1] $end
$var wire 1 W VISOR1_REG [0] $end
$var wire 1 X VISOR2_REG [6] $end
$var wire 1 Y VISOR2_REG [5] $end
$var wire 1 Z VISOR2_REG [4] $end
$var wire 1 [ VISOR2_REG [3] $end
$var wire 1 \ VISOR2_REG [2] $end
$var wire 1 ] VISOR2_REG [1] $end
$var wire 1 ^ VISOR2_REG [0] $end
$var wire 1 _ VISOR3_REG [6] $end
$var wire 1 ` VISOR3_REG [5] $end
$var wire 1 a VISOR3_REG [4] $end
$var wire 1 b VISOR3_REG [3] $end
$var wire 1 c VISOR3_REG [2] $end
$var wire 1 d VISOR3_REG [1] $end
$var wire 1 e VISOR3_REG [0] $end
$var wire 1 f sampler $end
$scope module i1 $end
$var wire 1 g gnd $end
$var wire 1 h vcc $end
$var wire 1 i unknown $end
$var tri1 1 j devclrn $end
$var tri1 1 k devpor $end
$var tri1 1 l devoe $end
$var wire 1 m address_down[7]~input_o $end
$var wire 1 n address_down[6]~input_o $end
$var wire 1 o address_down[5]~input_o $end
$var wire 1 p address_down[4]~input_o $end
$var wire 1 q address_down[3]~input_o $end
$var wire 1 r address_down[2]~input_o $end
$var wire 1 s address_down[1]~input_o $end
$var wire 1 t address_down[0]~input_o $end
$var wire 1 u read_reg[7]~input_o $end
$var wire 1 v read_reg[6]~input_o $end
$var wire 1 w read_reg[5]~input_o $end
$var wire 1 x read_reg[4]~input_o $end
$var wire 1 y read_reg[3]~input_o $end
$var wire 1 z read_reg[2]~input_o $end
$var wire 1 { read_reg[1]~input_o $end
$var wire 1 | read_reg[0]~input_o $end
$var wire 1 } a1teste~output_o $end
$var wire 1 ~ VISOR3_REG[6]~output_o $end
$var wire 1 !! VISOR3_REG[5]~output_o $end
$var wire 1 "! VISOR3_REG[4]~output_o $end
$var wire 1 #! VISOR3_REG[3]~output_o $end
$var wire 1 $! VISOR3_REG[2]~output_o $end
$var wire 1 %! VISOR3_REG[1]~output_o $end
$var wire 1 &! VISOR3_REG[0]~output_o $end
$var wire 1 '! g1teste~output_o $end
$var wire 1 (! led00~output_o $end
$var wire 1 )! led01~output_o $end
$var wire 1 *! led10~output_o $end
$var wire 1 +! led11~output_o $end
$var wire 1 ,! ad0~output_o $end
$var wire 1 -! ad1~output_o $end
$var wire 1 .! decod0[6]~output_o $end
$var wire 1 /! decod0[5]~output_o $end
$var wire 1 0! decod0[4]~output_o $end
$var wire 1 1! decod0[3]~output_o $end
$var wire 1 2! decod0[2]~output_o $end
$var wire 1 3! decod0[1]~output_o $end
$var wire 1 4! decod0[0]~output_o $end
$var wire 1 5! decod1[6]~output_o $end
$var wire 1 6! decod1[5]~output_o $end
$var wire 1 7! decod1[4]~output_o $end
$var wire 1 8! decod1[3]~output_o $end
$var wire 1 9! decod1[2]~output_o $end
$var wire 1 :! decod1[1]~output_o $end
$var wire 1 ;! decod1[0]~output_o $end
$var wire 1 <! problema[7]~output_o $end
$var wire 1 =! problema[6]~output_o $end
$var wire 1 >! problema[5]~output_o $end
$var wire 1 ?! problema[4]~output_o $end
$var wire 1 @! problema[3]~output_o $end
$var wire 1 A! problema[2]~output_o $end
$var wire 1 B! problema[1]~output_o $end
$var wire 1 C! problema[0]~output_o $end
$var wire 1 D! VISOR0_REG[6]~output_o $end
$var wire 1 E! VISOR0_REG[5]~output_o $end
$var wire 1 F! VISOR0_REG[4]~output_o $end
$var wire 1 G! VISOR0_REG[3]~output_o $end
$var wire 1 H! VISOR0_REG[2]~output_o $end
$var wire 1 I! VISOR0_REG[1]~output_o $end
$var wire 1 J! VISOR0_REG[0]~output_o $end
$var wire 1 K! VISOR1_REG[6]~output_o $end
$var wire 1 L! VISOR1_REG[5]~output_o $end
$var wire 1 M! VISOR1_REG[4]~output_o $end
$var wire 1 N! VISOR1_REG[3]~output_o $end
$var wire 1 O! VISOR1_REG[2]~output_o $end
$var wire 1 P! VISOR1_REG[1]~output_o $end
$var wire 1 Q! VISOR1_REG[0]~output_o $end
$var wire 1 R! VISOR2_REG[6]~output_o $end
$var wire 1 S! VISOR2_REG[5]~output_o $end
$var wire 1 T! VISOR2_REG[4]~output_o $end
$var wire 1 U! VISOR2_REG[3]~output_o $end
$var wire 1 V! VISOR2_REG[2]~output_o $end
$var wire 1 W! VISOR2_REG[1]~output_o $end
$var wire 1 X! VISOR2_REG[0]~output_o $end
$var wire 1 Y! count[0]~input_o $end
$var wire 1 Z! msg_done~input_o $end
$var wire 1 [! count[1]~input_o $end
$var wire 1 \! inst9|inst17~combout $end
$var wire 1 ]! S_mostraE~input_o $end
$var wire 1 ^! up_on~input_o $end
$var wire 1 _! down_on~input_o $end
$var wire 1 `! inst123|inst25~0_combout $end
$var wire 1 a! inst123|inst25~1_combout $end
$var wire 1 b! inst1|inst0~combout $end
$var wire 1 c! inst123|inst17~0_combout $end
$var wire 1 d! inst1|inst1~0_combout $end
$var wire 1 e! inst123|inst17~1_combout $end
$var wire 1 f! inst1|inst1~1_combout $end
$var wire 1 g! inst1|inst1~2_combout $end
$var wire 1 h! B_done~input_o $end
$var wire 1 i! inst50|inst~combout $end
$var wire 1 j! address_up[3]~input_o $end
$var wire 1 k! data_user[3]~input_o $end
$var wire 1 l! inst49|inst|9~0_combout $end
$var wire 1 m! data_user[0]~input_o $end
$var wire 1 n! address_up[0]~input_o $end
$var wire 1 o! inst49|inst4|9~0_combout $end
$var wire 1 p! address_up[1]~input_o $end
$var wire 1 q! data_user[1]~input_o $end
$var wire 1 r! inst49|inst3|9~0_combout $end
$var wire 1 s! data_user[2]~input_o $end
$var wire 1 t! address_up[2]~input_o $end
$var wire 1 u! inst49|inst2|9~0_combout $end
$var wire 1 v! inst6|inst7|inst~0_combout $end
$var wire 1 w! inst6|inst6|inst~0_combout $end
$var wire 1 x! inst6|inst5|inst7~0_combout $end
$var wire 1 y! inst6|inst4|inst~0_combout $end
$var wire 1 z! inst6|inst3|inst~0_combout $end
$var wire 1 {! inst4|LPM_MUX_component|auto_generated|result_node[1]~10_combout $end
$var wire 1 |! inst6|inst|inst~0_combout $end
$var wire 1 }! address_up[7]~input_o $end
$var wire 1 ~! data_user[7]~input_o $end
$var wire 1 !" inst49|inst6|9~0_combout $end
$var wire 1 "" data_user[6]~input_o $end
$var wire 1 #" address_up[6]~input_o $end
$var wire 1 $" inst49|inst5|9~0_combout $end
$var wire 1 %" data_user[4]~input_o $end
$var wire 1 &" address_up[4]~input_o $end
$var wire 1 '" inst49|inst8|9~0_combout $end
$var wire 1 (" address_up[5]~input_o $end
$var wire 1 )" data_user[5]~input_o $end
$var wire 1 *" inst49|inst7|9~0_combout $end
$var wire 1 +" inst18|inst7|inst~0_combout $end
$var wire 1 ," inst18|inst6|inst~0_combout $end
$var wire 1 -" inst18|inst5|inst7~0_combout $end
$var wire 1 ." inst18|inst4|inst~0_combout $end
$var wire 1 /" inst18|inst3|inst~0_combout $end
$var wire 1 0" inst2|LPM_MUX_component|auto_generated|result_node[1]~6_combout $end
$var wire 1 1" inst18|inst|inst~0_combout $end
$var wire 1 2" inst4|LPM_MUX_component|auto_generated|result_node[6]~12_combout $end
$var wire 1 3" inst4|LPM_MUX_component|auto_generated|result_node[5]~13_combout $end
$var wire 1 4" inst4|LPM_MUX_component|auto_generated|result_node[4]~14_combout $end
$var wire 1 5" inst4|LPM_MUX_component|auto_generated|result_node[3]~15_combout $end
$var wire 1 6" inst4|LPM_MUX_component|auto_generated|result_node[1]~11_combout $end
$var wire 1 7" inst4|LPM_MUX_component|auto_generated|result_node[0]~16_combout $end
$var wire 1 8" inst2|LPM_MUX_component|auto_generated|result_node[6]~8_combout $end
$var wire 1 9" inst2|LPM_MUX_component|auto_generated|result_node[4]~9_combout $end
$var wire 1 :" inst2|LPM_MUX_component|auto_generated|result_node[2]~10_combout $end
$var wire 1 ;" inst2|LPM_MUX_component|auto_generated|result_node[1]~7_combout $end
$var wire 1 <" B_mostra_E~input_o $end
$var wire 1 =" inst45~0_combout $end
$var wire 1 >" inst45~combout $end
$var wire 1 ?" inst44~combout $end
$var wire 1 @" inst41~combout $end
$var wire 1 A" inst3|inst26~0_combout $end
$var wire 1 B" inst3|inst25~combout $end
$var wire 1 C" inst3|inst17~2_combout $end
$var wire 1 D" inst3|inst16~combout $end
$var wire 1 E" inst2|LPM_MUX_component|auto_generated|result_node [6] $end
$var wire 1 F" inst2|LPM_MUX_component|auto_generated|result_node [5] $end
$var wire 1 G" inst2|LPM_MUX_component|auto_generated|result_node [4] $end
$var wire 1 H" inst2|LPM_MUX_component|auto_generated|result_node [3] $end
$var wire 1 I" inst2|LPM_MUX_component|auto_generated|result_node [2] $end
$var wire 1 J" inst2|LPM_MUX_component|auto_generated|result_node [1] $end
$var wire 1 K" inst2|LPM_MUX_component|auto_generated|result_node [0] $end
$var wire 1 L" inst4|LPM_MUX_component|auto_generated|result_node [6] $end
$var wire 1 M" inst4|LPM_MUX_component|auto_generated|result_node [5] $end
$var wire 1 N" inst4|LPM_MUX_component|auto_generated|result_node [4] $end
$var wire 1 O" inst4|LPM_MUX_component|auto_generated|result_node [3] $end
$var wire 1 P" inst4|LPM_MUX_component|auto_generated|result_node [2] $end
$var wire 1 Q" inst4|LPM_MUX_component|auto_generated|result_node [1] $end
$var wire 1 R" inst4|LPM_MUX_component|auto_generated|result_node [0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
b0 "
0#
0$
b1 %
b1111 &
0'
0(
b0 )
0*
1+
1,
0-
0.
05
14
13
12
01
00
0/
0<
0;
0:
09
08
07
16
1=
0>
1?
0@
0A
1I
1H
1G
1F
0E
0D
0C
0B
0P
1O
1N
1M
0L
0K
0J
0W
0V
0U
0T
0S
0R
1Q
1^
0]
0\
0[
0Z
1Y
0X
1e
1d
1c
1b
0a
0`
1_
xf
0g
1h
xi
1j
1k
1l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
1}
1~
0!!
0"!
1#!
1$!
1%!
1&!
1'!
0(!
1)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
11!
12!
13!
04!
15!
06!
07!
08!
09!
0:!
0;!
0<!
0=!
0>!
0?!
1@!
1A!
1B!
1C!
0D!
0E!
0F!
1G!
1H!
1I!
0J!
1K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
1S!
0T!
0U!
0V!
0W!
1X!
1Y!
0Z!
0[!
0\!
0]!
1^!
0_!
0`!
1a!
1b!
0c!
0d!
0e!
1f!
0g!
0h!
0i!
0j!
1k!
1l!
1m!
0n!
1o!
0p!
1q!
1r!
1s!
0t!
1u!
0v!
0w!
0x!
0y!
0z!
0{!
1|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
1+"
0,"
0-"
1."
0/"
10"
11"
02"
03"
04"
05"
16"
17"
18"
09"
0:"
0;"
0<"
0="
0>"
0?"
1@"
1A"
0B"
1C"
1D"
0K"
zJ"
zI"
0H"
zG"
0F"
zE"
zR"
zQ"
1P"
zO"
zN"
zM"
zL"
$end
#1000000
